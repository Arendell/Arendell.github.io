[{"content":"1.给主页添加篇幅\u0026amp;字数统计 灵感来源于：第三夏尔大佬代码总字数统计\n大佬原始代码\n在layouts/partials/footer/footer.html里增加以下代码：\n1 2 3 4 5 6 7 8 9 \u0026lt;!-- Add total page and word count time --\u0026gt; \u0026lt;section class=\u0026#34;totalcount\u0026#34;\u0026gt; {{$scratch := newScratch}} {{ range (where .Site.Pages \u0026#34;Kind\u0026#34; \u0026#34;page\u0026#34; )}} {{$scratch.Add \u0026#34;total\u0026#34; .WordCount}} {{ end }} 共发表了{{ len (where .Site.RegularPages \u0026#34;Section\u0026#34; \u0026#34;post\u0026#34;) }}篇文章 -- 共计{{ div ($scratch.Get \u0026#34;total\u0026#34;) 1000.0 | lang.FormatNumber 2 }}K字 \u0026lt;/section\u0026gt; 在assets/scss/partials/footer.scss里修改风格：\n1 2 3 4 5 .totalcount { color: var(--card-text-color-secondary); font-weight: normal; margin-bottom: 5px; } 个人代码\n但是由于大佬是直接加在全局footer里的，个人不喜欢这种样式，更喜欢只在homepage显示，另外想把位置挪动到上方，并且作为卡片样式和整体风格搭配，效果如下： 在layouts\\index.html内新增代码： 注意放在\n1 2 3 4 5 {{ $pag := .Paginate ($filtered) }} 。。。 。。。 \u0026lt;section class=\u0026#34;article-list\u0026#34;\u0026gt; 之间 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 \u0026lt;!-- 插入统计模块 --\u0026gt; \u0026lt;section class=\u0026#34;totalcount\u0026#34;\u0026gt; {{$scratch := newScratch}} {{ range (where .Site.Pages \u0026#34;Kind\u0026#34; \u0026#34;page\u0026#34; )}} {{$scratch.Add \u0026#34;total\u0026#34; .WordCount}} {{ end }} \u0026lt;div class=\u0026#34;count-box\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;count-item\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;count-icon\u0026#34;\u0026gt;📝\u0026lt;/span\u0026gt; \u0026lt;div\u0026gt; \u0026lt;strong\u0026gt;{{ len (where .Site.RegularPages \u0026#34;Section\u0026#34; \u0026#34;post\u0026#34;) }}\u0026lt;/strong\u0026gt; \u0026lt;span\u0026gt;篇文章\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;count-item\u0026#34;\u0026gt; \u0026lt;span class=\u0026#34;count-icon\u0026#34;\u0026gt;🖋️🖋️\u0026lt;/span\u0026gt; \u0026lt;div\u0026gt; \u0026lt;strong\u0026gt;{{ div ($scratch.Get \u0026#34;total\u0026#34;) 1000.0 | lang.FormatNumber 2 }}\u0026lt;/strong\u0026gt; \u0026lt;span\u0026gt;千字\u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/section\u0026gt; 修改assets\\scss\\custom.scss对应的样式，保证卡片效果和暗黑模式适配\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 /* 统计模块美化 */ /* Total count statistics style */ .totalcount { display: flex; flex-direction: column; gap: var(--section-separation); background-color: var(--card-background); box-shadow: var(--shadow-l1); border-radius: var(--card-border-radius); padding: var(--card-padding); transition: box-shadow 0.3s ease; \u0026amp;:hover { box-shadow: var(--shadow-l2); } .count-box { display: flex; flex-direction: column; gap: 12px; font-family: var(--article-font-family); color: var(--card-text-color-main); // 主统计数字 strong { font-size: 2.8rem; font-weight: 600; color: var(--accent-color); @include respond(md) { font-size: 3.2rem; } } // 描述文字 span { font-size: 1.6rem; color: var(--card-text-color-secondary); line-height: 1.5; @include respond(md) { font-size: 1.8rem; } } // 辅助信息 .meta { display: flex; gap: 20px; margin-top: 15px; font-size: 1.4rem; color: var(--card-text-color-tertiary); div { display: flex; align-items: center; gap: 8px; svg { width: 18px; height: 18px; stroke: currentColor; } } } } // 响应式调整 @include respond(xl) { padding: calc(var(--card-padding) * 1.2); .count-box { gap: 15px; } } // 紧凑模式变体 \u0026amp;--compact { padding: var(--small-card-padding); .count-box { flex-direction: row; align-items: baseline; gap: 20px; strong { font-size: 2.2rem; } span { font-size: 1.4rem; } } } } ","date":"2025-02-26T11:52:12+08:00","image":"https://arendelle-image-bed.oss-cn-hangzhou.aliyuncs.com/%E5%8D%9A%E5%AE%A2%E5%9B%BE%E5%BA%8A/20250226115657797.png","permalink":"https://Arendell.github.io/p/hugo%E5%8D%9A%E5%AE%A2%E8%A3%85%E4%BF%AE%E8%AE%B0%E5%BD%95%E9%95%BF%E6%9C%9F%E6%9B%B4%E6%96%B0/","title":"Hugo博客装修记录(长期更新❤)"},{"content":"为什么要做评论区 方便大火基于某一篇文章做互动，也方便作者了解大家对于某篇文章的想法。自新媒体时代大家就习惯于使用【评论区】之类的东西。逻辑功能清晰明了。\n方案介绍 交互式评论区这种东西，纯靠前端做在一个没有登录系统的静态网页上，显然是不现实的，因此hugo提供了大量的comment服务接口，方便大家接入各类提供评论的服务商。那即然是【商】就要赚钱，那么有没有一种方便快捷还开源的解决方案呢？有的兄弟，有的！\nGiscus，利用 GitHub Discussions 实现的评论系统 多的不说少的不唠，我们看看官网怎么写的\n开源（免费😍） 基于Github（大家都有账号） 简单部署至静态网页 这下完了，三个都是妥妥的痛点解决呀！不得不用了😭😭😭\n部署过程 其实我建议大家仔细阅读Giscus的官网，几乎是傻瓜式部署了。\n新建一个GitHub仓库，并确保他是Public状态。 给这个仓库开启Discussions功能，勾上就行。 把giscus.app安装到这个仓库，只选择安装到刚刚配置Discussions的仓库就行。 回到Giscus官网，基于刚刚创建的仓库名字，在官网获取配置文件。 配置如图选择。 向下滑，找到这一大堆参数。把他保存好 打开hugo的配置文件，一般是hugo.yaml，找到全局开关置为Enable，并把provider置为我们要用的giscus。 接着下滑，找到giscus的配置处，把刚刚官网给的配置，按名称依次输入。 行了，享受你的Giscus评论区吧~ ","date":"2025-02-25T14:05:37+08:00","image":"https://arendelle-image-bed.oss-cn-hangzhou.aliyuncs.com/%E5%8D%9A%E5%AE%A2%E5%9B%BE%E5%BA%8A/20250225141824373.png","permalink":"https://Arendell.github.io/p/%E5%A6%82%E4%BD%95%E7%BB%99%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8C%BA/","title":"如何给博客添加评论区"},{"content":" 本文及后续文章的所有图片均采用此方案保存\n为什么要做图床 由于众所周知的原因，国内访问GitHub的速度极慢，甚至有时直接访问无法访问（DNS污染？😢）,因此把图片直接放到Github上，无论是阅读、上传还是维护起来都非常麻烦。另外就是有大量的摄影作品照片，后续也想放到博客来，一张JPG就是8-10M，如果挂Github实在是慢的出奇。那么有没有一种方法，即可以方便的上传图片，又可以在国内非常高效的访问呢？有的兄弟，有的。\n方案介绍 云端图床 因为之前工作经历和SDN相关，因此我第一时间就想到了使用国内的云服务来实现图床操作，现在问题来了，国内做云的这么多，选择哪家？\n阿里云 百度云 腾讯云 运营商云 简单搜索可知：\n百度云从诞生开始，在各家云服务器内就没啥竞争力。唯一有竞争力的产品是百度网盘，那玩意儿就不提供https外链，想保存图片只允许自己看or客户端链接分享，pass。 腾讯云当初做毕设的时候用过，对WX小程序支持度极好，当时学生白嫖了180天的ECS，现在秋后算账找我要大钱，pass。 运营商云，曾经工作相关不多解释，pass。 现在选择只剩一个了，只有阿里云能选了，阿里云我用过两次，第一次是2020年白嫖了90天的ECS，还有2024年SD火的时候，白嫖过他家的SD函数用来炼二次元丹，总体体验还是很好的，唯一的问题就是他家的控制台老更新，阿里黑话术语特别多，每次打开都头晕。为了避免阿里和腾子一样秋后找我算大钱。我们登录阿里云看看OSS的价格，夺少？\n9块兄弟们，9块一年。这不是炸了都夸他炸的响吗！？ 虽然只有40G，但是用作图床绰绰有余了，后续也可以方便的升级容量（秋后算大钱）。\n管理软件 好的现在云端OSS的问题解决了，现在还需要个软件能帮我：\n连接云端图床 一键上传图片 快捷生成MD链接 历史图片维护 简单在GitHub上检索下，立刻发现了🌟Star🌟巨高的PicGO,他的readme是这么写的： 那还等什么，直接跟Star然后下载安装！！！\n部署过程 购买OSS对象存储 登录阿里云，在上方选择产品, 找到OSS对象存储。 打开配置价格单，我的选择是： 标准 - 本地冗余（ LRS ）存储包 中国内地通用 40GB 一年 这样和算下来一年的价格是9元，当然为了避免秋后给我算大钱，我选择关闭了自动续费，如有需要可自行开启。 购买完成后点击对象存储控制台，开启OSS服务，这里会再进一遍购买菜单，但是开通费用是0元，未见明显异常（秋后算大钱🌚） 进入OSS的控制台，选择创建 bucket 按如下参数选择配置，建议选择距离工作/生活最近的节点，还有外部访问的权限，目前无法在创建页面打开，需要创建后单独开启。 开启外部访问，此步骤需要进入刚刚创建好的bucket控制台，打开外部访问权限，再开放外部读权限（你也不希望外部能写吧🤪） 给PicGO创建一个用户（说白了就是类似APIkey的东西，让软件可以管理云端图片，注意这个用户的权限和第六步我们开放的权限不是一回事，第六步只是让所有人通过阿里云的链接可以从公网访问到这个图片，而key权限可以直接管理整个OSS），刚刚的权限控制台找到最后一个RAM访问控制，并点击进入控制台。选择用户，新建用户，填写这些内容，记得勾选key让PicGO能登录 申请好后出现用户列表，务必保存好这些信息（说是关闭了不会再有哦） 给这个用户授权OSS管理权限，这样才能让持有key的PicGO上传图片 总算把阿里云的部分弄完了，阿里云的控制台可读性太差，全是阿里黑话SDN术语🤑\n安装配置PicGo 下载PicGO，记得给人家点点Star🌟 配置PicGO上的阿里云OSS 都设置好后，没有问题的话，就可以使用了 使用说明 怎么用PicGO，我觉得这个软件已经足够傻瓜，实在不懂也可以看看Github上的readme,再看不懂可以看看我怎么用：\n用WX/飞书/QQ/Windows等等等乱七八糟截图软件截个图 点这里，确定上传 自动copy图床链接（MD语法），直接粘贴到你的MD博客里 测试了下速度真快多了，比Github快了有3倍\n","date":"2025-02-25T10:10:38+08:00","image":"https://arendelle-image-bed.oss-cn-hangzhou.aliyuncs.com/%E5%8D%9A%E5%AE%A2%E5%9B%BE%E5%BA%8A/20250225101925662.png","permalink":"https://Arendell.github.io/p/%E5%A6%82%E4%BD%95%E4%BD%8E%E6%88%90%E6%9C%AC%E8%AE%BE%E7%BD%AE%E9%98%BF%E9%87%8C%E4%BA%91oss%E5%9B%BE%E5%BA%8A/","title":"如何低成本设置阿里云OSS图床"},{"content":"第一篇博客 为什么有这个网页 偶然在B站刷到了Letere-莱特雷 大佬 的视频，因讲解非常细致且通俗易懂，遂决定跟着一起部署；另外由于之前的文章、作品等大多散落在知乎、小红书、视觉中国、朋友圈等平台，也确实需要一个地方来集中管理和保存。🥰🥰🥰\n使用了什么技术 最开始已经提到，本网页是基于Letere-莱特雷 大佬 的视频讲解制作的，因此方案仿照他采用Hugo+github_page的方案实现，并利用GitHub的Action自动部署Hugo生成的静态网页。\n这个网页会更新什么内容 技术笔记笔记📃 摄影作品📸 趣味分享🎨 个人喜欢一切花里胡哨的东西，所以可能会在美化网页上做很多事🤷‍♀️\n这个网页会维护多久?更新频率？ 理论上只要大飞Github_Page活着就会一直更新,更新频率得看我的兴趣，有时候兴趣上头了就会一天三四更，犯懒了就不更了。\n","date":"2025-02-24T20:04:28+08:00","image":"https://arendelle-image-bed.oss-cn-hangzhou.aliyuncs.com/%E5%8D%9A%E5%AE%A2%E5%9B%BE%E5%BA%8A/pD6L94gfhyQLeNpV-generated_image.jpg","permalink":"https://Arendell.github.io/p/%E5%A4%A7%E9%A3%9E%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/","title":"大飞的第一篇博客"}]